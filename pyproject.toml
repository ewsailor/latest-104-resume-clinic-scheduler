# 定義專案基本資訊
[tool.poetry]
name = "104-resume-clinic-scheduler"                             
version = "0.1.0"                                                 
description = "104 履歷診療室 - 站內諮詢時間媒合系統"      
authors = ["Oscar <ew12136@gmail.com>"]                       
license = "MIT"  # 授權是歡迎自由使用，但要保留版權與授權資訊
readme = "README.md"
packages = [{ include = "app" }]  # 僅將 app/ 目錄打包進套件中，避免將 tests/、scripts/ 等非部署用內容加入發佈包，利於部署與 CI/CD 整合
classifiers = [                                           
    "Development Status :: 3 - Alpha",  # 開發狀態：Alpha 版本，有初步功能，可以跑，但可能會大改
    "Programming Language :: Python :: 3.12",                    
    "Framework :: FastAPI",                                 
    "License :: OSI Approved :: MIT License",                     
    "Operating System :: OS Independent"            
]

# 定義專案運行所需的套件
[tool.poetry.dependencies]
python = "^3.12"      
fastapi = "^0.116.1"  
uvicorn = { extras = ["standard"], version = ">=0.34.3,<0.35.0" }   
pymysql = ">=1.1.1,<2.0.0" 
sqlalchemy = ">=2.0.41,<3.0.0"  
motor = ">=3.7.1,<4.0.0"  # 用 motor 建立非同步 MongoDB 連線，進行非同步資料庫查詢
pymongo = ">=4.0.0,<5.0.0"  # 用 pymongo 做同步操作，寫管理工具或腳本（例如資料匯入匯出）時使用
redis = ">=6.2.0,<7.0.0" 
# python-dotenv 已移除 - 使用 Pydantic BaseSettings 自動載入 .env 檔案 
jinja2 = ">=3.1.0,<4.0.0" 
pydantic = ">=2.11.7,<3.0.0"
boto3 = "^1.34.0"  # Boto3 AWS SDK - 用於與 AWS 服務互動
python-multipart = ">=0.0.7"  # 用於處理表單資料，取代舊的 multipart 套件

# 僅在開發時需要的套件
pydantic-settings = "^2.10.1"
requests = "^2.32.4"  # HTTP 請求庫，用於測試腳本
alembic = "^1.16.4"
[tool.poetry.group.dev.dependencies] 
pytest = "^8.3.5"
pytest-asyncio = "^0.23.7"   
httpx = "^0.28.1"  
black = "^25.1.0"  # 自動格式化 Python 程式碼
isort = "^6.0.1"  # 自動整理 import 語句的順序 
mypy = "^1.16.0"  # 靜態型別檢查
pre-commit = "^3.7.0"  # 提交前，自動檢查程式碼品質
pytest-mock = "^3.14.1"
types-requests = "^2.32.4.20250611"
autoflake = "^2.3.1"  # 自動移除未使用的 import 和變數
pyupgrade = "^3.18.0"  # 自動升級 Python 語法並整理 import
pydocstyle = "^6.3.0"
pytest-cov = "^7.0.0"
flake8 = "^7.0.0"  # 代碼風格檢查
safety = "^3.0.1"  # 安全漏洞檢查
bandit = "^1.7.5"  # 安全代碼分析
[tool.black]
line-length = 88  # 每行最大字元數，超過此長度會自動換行
target-version = ["py312"]
skip-string-normalization = true  # 跳過字串正規化，保持原始格式
# encoding = "utf-8"  # Black 不支援此設定，已移除

# isort 匯入排序工具配置
[tool.isort]
profile = "black"  # 確保與 Black 格式化工具相容
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
# 自動移除函式內部的 import 語句並移到檔案頂部
remove_redundant_aliases = true
force_sort_within_sections = true
# encoding = "utf-8"  # isort 不支援此設定，已移除

# MyPy 型別檢查工具配置
[tool.mypy] 
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = false  # 允許使用 type: ignore 註解
warn_return_any = false  # 允許返回 Any 類型
strict_equality = true
ignore_missing_imports = true # 忽略缺少的匯入，對於無法找到的套件不報錯
exclude = ["scripts", "tests", ".mypy_cache", "__pycache__", "alembic"]
namespace_packages = true

# Pydocstyle 文件字串檢查工具配置
[tool.pydocstyle]
convention = "google"
add-ignore = [
    "D107",  # 忽略 __init__ 強制 docstring
    "D203",  # 允許 class docstring 單空行
    "D213",  # 允許多行 docstring 分開摘要
    "D212",  # 允許多行 docstring 摘要從第二行開始
    "D415",  # 允許中文標點符號結尾
    "D406", "D407", "D413",  # 忽略 section name 與結尾格式限制
]

# Flake8 代碼風格檢查配置
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "venv",
    "alembic",
]

# Bandit 安全檢查配置
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # 跳過 assert_used 和 shell_injection 檢查

# 建置系統配置
[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]  
build-backend = "poetry.core.masonry.api"